syntax = "proto3";
option go_package = "github.com/mjgrzybek/process_manager/proto";

message StartRequest {
  string name = 1;
  repeated string args = 2;
  repeated string env = 3;
}

message StartResponse {
  oneof result {
    string uuid = 1;
    string errorMessage = 2;
  }
}

message StopRequest {
  string uuid = 1;
}

message StopResponse {
  oneof result {
    int32 exitCode = 1;
    string errorMessage = 2;
  }
}

message StatusRequest {
  string uuid = 1;
}

message Status {
  int32 processId = 1;
  string effectiveUserName = 2;
  int32 priority = 3;
  int32 niceValue = 4;
  string virtualImage = 5;
  int32 residentSize = 6;
  int32 sharedMemory = 7;
  string processStatus = 7;
  int32 cpuUsage = 8;
  int32 memoryUsage = 9;
  int32 cpuTime = 10;
  string commandLine = 11;
}

message StatusResponse {
  oneof result {
    Status status = 1;
    string errorMessage = 2;
  }
}

message OutputRequest {
  string uuid = 1;
}

message OutputResponse {
  oneof result {
    bytes output = 1;
    string errorMessage = 2;
  }
}

message OutputStreamRequest {
  string uuid = 1;
}


service ProcessManagerService {
  rpc Start (StartRequest) returns (StartResponse) {}
  rpc Stop (StopRequest) returns (StopResponse) {}
  rpc Status (StatusRequest) returns (StatusResponse) {}
  rpc Output (OutputRequest) returns (OutputResponse) {}
  rpc OutputStream (OutputStreamRequest) returns (stream OutputResponse) {}
}